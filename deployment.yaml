# apiVersion: v1
# kind: Namespace
# metadata:
#   name: production
    
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: arvigo-backend
#   annotations: 
#     cloud.google.com/neg: '{"ingress": true}'
#   namespace: production
#   labels:
#     app: arvigo-backend
# spec:
#   selector:
#     app: arvigo-backend
#   ports:
#   - port: 80
#     protocol: TCP
#     name: http
#     targetPort: 80
#   type: NodePort

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: arvigo-backend
#   namespace: production
# spec:
#   selector:
#     matchLabels:
#       app: arvigo-backend
#   strategy:
#     type: RollingUpdate
#   template: #Template for container
#     metadata:
#       labels:
#         app: arvigo-backend
#     spec:
#       containers:
#       - name: arvigo-backend
#         image:  asia.gcr.io/$PROJECT_ID/production/arvigo-backend:$SHORT_SHA
#         imagePullPolicy: Always
#         ports:
#         - containerPort: 80
#           name: arvigo-backend
#         resources:
#           requests:
#             cpu: 50m

# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: arvigo-backend
#   namespace: production
#   annotations:
#     kubernetes.io/ingress.global-static-ip-name: arvigo-ip-ex-backend
#     kubernetes.io/ingress.allow-http: "true"
#     networking.gke.io/managed-certificates: arvigo-backend
# spec:
#   rules:
#     - host: api.arvigo.site
#       http:
#         paths:
#         - path: /*
#           pathType: ImplementationSpecific
#           backend:
#             service:
#               name: arvigo-backend
#               port: 
#                 number: 80

# ---
# apiVersion: networking.gke.io/v1
# kind: ManagedCertificate
# metadata:
#   name: arvigo-backend
#   namespace: production
# spec:
#   domains:
#     - api.arvigo.site
---
apiVersion: v1
kind: Service
metadata:
  name: arvigo-backend
  labels:
    app: arvigo-backend
spec:
  selector:
    app: arvigo-backend
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  type: LoadBalancer
  loadBalancerIP: 34.101.205.212
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: arvigo-backend
  labels:
    app: arvigo-backend
spec:
  selector:
    matchLabels:
      app: arvigo-backend
  template:
    metadata:
      labels:
        app: arvigo-backend
    spec:
      containers:
      - name: arvigo-backend
        image: asia.gcr.io/$PROJECT_ID/production/arvigo-backend:$SHORT_SHA
        ports:
        - containerPort: 8080
# ---
# apiVersion: autoscaling/v1
# kind: HorizontalPodAutoscaler
# metadata:
#   name: arvigo-backend
# spec:
#   maxReplicas: 10
#   minReplicas: 3
#   scaleTargetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: arvigo-backend
#   targetCPUUtilizationPercentage: 100
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: arvigo-backend
#   annotations:
#     kubernetes.io/ingress.global-static-ip-name: arvigo-ip-static-backend-global
#     kubernetes.io/ingress.allow-http: "false"
#     networking.gke.io/managed-certificates: arvigo-backend
# spec:
#   rules:
#     - host: api.arvigo.site
#       http:
#         paths:
#         - path: /*
#           pathType: ImplementationSpecific
#           backend:
#             service:
#               name: arvigo-backend
#               port: 
#                 number: 80
# ---
# apiVersion: networking.gke.io/v1
# kind: ManagedCertificate
# metadata:
#   name: arvigo-backend
# spec:
#   domains:
#     - api.arvigo.site
#     - www.api.arvigo.site
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: arvigo-backend
#   annotations:
#     kubernetes.io/ingress.allow-http: "true"
#     kubernetes.io/ingress.global-static-ip-name: "arvigo-ip-ex-backend"
#     kubernetes.io/ingress.class: "gce"
# spec:
#   rules:
#   - host: api.arvigo.site
#     http:
#       paths:
#       - path: /*
#         pathType: ImplementationSpecific
#         backend:
#           service:
#             name: arvigo-backend
#             port:
#               number: 80
